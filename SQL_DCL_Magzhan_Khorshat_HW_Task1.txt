Database contains default roles only
There are 15 of them:

pg_checkpoint
pg_create_subscription
pg_database_owner
pg_execute_server_program - Allow executing programs on the database server as the user the database runs as with COPY and other functions which allow executing a server-side program.

pg_monitor - Read/execute various monitoring views and functions. This role is a member of pg_read_all_settings, pg_read_all_stats and pg_stat_scan_tables.

pg_read_all_data
pg_read_all_settings - Read all configuration variables, even those normally visible only to superusers.

pg_read_all_stats - Read all pg_stat_* views and use various statistics related extensions, even those normally visible only to superusers.

pg_read_server_files - Allow reading files from any location the database can access on the server with COPY and other file-access functions.

pg_signal_backend - Signal another backend to cancel a query or terminate its session.

pg_stat_scan_tables - Execute monitoring functions that may take ACCESS SHARE locks on tables, potentially for a long time.

pg_use_reserved_connections
pg_write_all_data
pg_write_server_files - Allow writing to files in any location the database can access on the server with COPY and other file-access functions.

postgres

PostgreSQL provides a set of these default roles which provide access to certain, commonly needed, privileged capabilities and information. Administrators can GRANT these roles to users and/or other roles in their environment, providing those users with access to the specified capabilities and information.

Overall, I can say that there is no specific precautions made in the database.